// Exercise 1: Hello World
public class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Greetings, World!");
    }
}
// Exercise 2: Simple Calculator
import java.util.Scanner;

public class SimpleCalculator {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print("First number: ");
        double x = input.nextDouble();
        System.out.print("Second number: ");
        double y = input.nextDouble();
        System.out.print("Operator (+, -, *, /): ");
        char operator = input.next().charAt(0);

        double output;
        switch (operator) {
            case '+': output = x + y; break;
            case '-': output = x - y; break;
            case '*': output = x * y; break;
            case '/': output = (y != 0) ? x / y : Double.NaN; break;
            default: System.out.println("Invalid operation."); return;
        }
        System.out.println("Result: " + output);
    }
}


// Exercise 3: Even or Odd Checker
import java.util.Scanner;

public class EvenOddCheck {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Input an integer: ");
        int number = scanner.nextInt();
        System.out.println((number % 2 == 0) ? "It's Even" : "It's Odd");
    }
}

// Exercise 4: Leap Year Checker
import java.util.Scanner;

public class LeapYearTest {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Year to check: ");
        int year = scanner.nextInt();
        boolean isLeap = (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);
        System.out.println(isLeap ? "Leap Year" : "Common Year");
    }
}


// Exercise 5: Multiplication Table
import java.util.Scanner;

public class MultiplicationChart {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Number: ");
        int num = scanner.nextInt();
        for (int i = 1; i <= 10; i++) {
            System.out.printf("%d x %d = %d\n", num, i, num * i);
        }
    }
}


// Exercise 6: Data Type Demonstration
public class ShowDataTypes {
    public static void main(String[] args) {
        int num = 15;
        float rate = 2.5f;
        double precise = 123.456;
        char letter = 'Z';
        boolean flag = false;

        System.out.println("int: " + num);
        System.out.println("float: " + rate);
        System.out.println("double: " + precise);
        System.out.println("char: " + letter);
        System.out.println("boolean: " + flag);
    }
}

// Exercise 7: Type Casting
public class CastingExample {
    public static void main(String[] args) {
        double decimal = 8.75;
        int converted = (int) decimal;
        int value = 42;
        double widened = value;

        System.out.println("Double to int: " + converted);
        System.out.println("Int to double: " + widened);
    }
}

// Exercise 8: Operator Precedence
public class PrecedenceDemo {
    public static void main(String[] args) {
        int result = 20 + 4 * 3;
        System.out.println("Calculated Result: " + result);
    }
}

// Exercise 9: Grade Calculator
import java.util.Scanner;

public class GradeEvaluator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter marks (0-100): ");
        int score = scanner.nextInt();

        char grade = (score >= 90) ? 'A' :
                     (score >= 80) ? 'B' :
                     (score >= 70) ? 'C' :
                     (score >= 60) ? 'D' : 'F';

        System.out.println("Your grade: " + grade);
    }
}

// Exercise 10: Number Guessing Game
import java.util.*;

public class GuessTheNumber {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Random rand = new Random();
        int target = rand.nextInt(100) + 1;
        int guess;

        do {
            System.out.print("Guess (1-100): ");
            guess = sc.nextInt();
            if (guess < target) System.out.println("Too Low");
            else if (guess > target) System.out.println("Too High");
            else System.out.println("You've guessed it!");
        } while (guess != target);
    }
}


// Exercise 11: Factorial Calculator
import java.util.Scanner;

public class FactorialCalc {
    static int factorial(int n) {
        return (n == 0) ? 1 : n * factorial(n - 1);
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Number: ");
        int number = sc.nextInt();
        System.out.println("Factorial = " + factorial(number));
    }
}

// Exercise 12: Method Overloading
public class OverloadDemo {
    static int sum(int a, int b) {
        return a + b;
    }

    static double sum(double a, double b) {
        return a + b;
    }

    static int sum(int a, int b, int c) {
        return a + b + c;
    }

    public static void main(String[] args) {
        System.out.println(sum(4, 5));
        System.out.println(sum(3.5, 2.5));
        System.out.println(sum(1, 2, 3));
    }
}


// Exercise 13: Recursive Fibonacci
import java.util.Scanner;

public class RecursiveFibonacci {
    static int fib(int n) {
        return (n <= 1) ? n : fib(n - 1) + fib(n - 2);
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter index: ");
        int index = sc.nextInt();
        System.out.println("Fibonacci at " + index + ": " + fib(index));
    }
}

// Exercise 14: Array Sum and Average
import java.util.Scanner;

public class ArrayStats {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("How many numbers? ");
        int n = scanner.nextInt();
        int[] numbers = new int[n];
        int total = 0;

        for (int i = 0; i < n; i++) {
            System.out.print("Number " + (i + 1) + ": ");
            numbers[i] = scanner.nextInt();
            total += numbers[i];
        }

        double average = (double) total / n;
        System.out.println("Total: " + total + ", Average: " + average);
    }
}


// Exercise 15: String Reversal
import java.util.Scanner;

public class ReverseText {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Input string: ");
        String text = sc.nextLine();
        String reversed = new StringBuilder(text).reverse().toString();
        System.out.println("Reversed: " + reversed);
    }
}

// Exercise 16: Palindrome Checker
import java.util.Scanner;

public class PalindromeTest {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print("Enter text: ");
        String original = input.nextLine().replaceAll("[^a-zA-Z0-9]", "").toLowerCase();
        String reversed = new StringBuilder(original).reverse().toString();
        System.out.println(original.equals(reversed) ? "Palindrome" : "Not a Palindrome");
    }
}

// Exercise 17: Class and Object Creation
class Vehicle {
    String brand;
    String type;
    int year;

    Vehicle(String brand, String type, int year) {
        this.brand = brand;
        this.type = type;
        this.year = year;
    }

    void showDetails() {
        System.out.println("Brand: " + brand + ", Type: " + type + ", Year: " + year);
    }

    public static void main(String[] args) {
        Vehicle car = new Vehicle("Honda", "Civic", 2021);
        car.showDetails();
    }
}


// Exercise 18: Inheritance Example
class Creature {
    void sound() {
        System.out.println("Generic sound");
    }
}

class Cat extends Creature {
    void sound() {
        System.out.println("Meow");
    }

    public static void main(String[] args) {
        Creature c1 = new Creature();
        Creature c2 = new Cat();

        c1.sound();
        c2.sound();
    }
}


// Exercise 19: Interface Implementation
interface Instrument {
    void play();
}

class Violin implements Instrument {
    public void play() {
        System.out.println("Playing violin");
    }
}

class Drum implements Instrument {
    public void play() {
        System.out.println("Beating drum");
    }

    public static void main(String[] args) {
        Instrument v = new Violin();
        Instrument d = new Drum();

        v.play();
        d.play();
    }
}


// Exercise 20: Try-Catch Example
import java.util.Scanner;

public class DivisionSafety {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        try {
            System.out.print("Numerator: ");
            int num = input.nextInt();
            System.out.print("Denominator: ");
            int den = input.nextInt();
            int result = num / den;
            System.out.println("Quotient: " + result);
        } catch (ArithmeticException e) {
            System.out.println("Division by zero not allowed.");
        }
    }
}
